name: build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: clippy, rustfmt
          profile: minimal

      - name: Is AVX-512F available?
        id: avx512f
        run: lscpu | grep --quiet avx512f
        continue-on-error: true

      - name: Run tests
        run: cargo test --release --all-features

      - name: Run tests w/ AVX-512F enabled
        run: cargo test --release --all-features
        if: ${{ steps.avx512f.outcome == 'success' }}
        env:
          RUSTFLAGS: -Ctarget-feature=+avx512f
          RUSTDOCFLAGS: -Ctarget-feature=+avx512f

      - name: Run tests (--no-default-features)
        run: cargo test --release --no-default-features

      - name: Clippy
        run: cargo clippy --all-targets --all-features -- -Dwarnings

      - name: Clippy w/ AVX-512F enabled
        run: cargo clippy --all-targets --all-features -- -Dwarnings
        if: ${{ steps.avx512f.outcome == 'success' }}
        env:
          RUSTFLAGS: -Ctarget-feature=+avx512f
          RUSTDOCFLAGS: -Ctarget-feature=+avx512f

      - name: Check format
        run: cargo fmt -- --check

      - name: Coverage
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests
          RUSTDOCFLAGS: -Zprofile -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests
        run: |
          cargo clean
          cargo test

      - name: Gather coverage data
        id: coverage
        uses: actions-rs/grcov@v0.1

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}
